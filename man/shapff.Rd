% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shapff_fit.R
\name{shapff}
\alias{shapff}
\title{Fits fuzzy forest algorithm with SHAP values.}
\usage{
shapff(
  X,
  y,
  Z = NULL,
  shap_model = 1,
  shap_type = "shapley",
  module_membership,
  min_features = 20,
  screen_params = fuzzyforest:::screen_control(min_ntree = 5000),
  select_params = fuzzyforest:::select_control(min_ntree = 5000),
  final_ntree = 5000,
  num_processors = 1,
  parallel = 1,
  nodesize,
  test_features = NULL,
  test_y = NULL,
  nsim = 1,
  final_nsim = 100
)
}
\arguments{
\item{X}{A data.frame. where each column represents a
feature vector.}

\item{y}{Response vector. If performing classification, \code{y} should
be a factor or a character. If performing regression, \code{y}
should be numeric.}

\item{Z}{A data.frame of additional features that will bypass
the screening step.}

\item{shap_model}{Binary indicator for \code{shapff} model. If \code{1}, \code{shapff}
runs SHAPley values at both screening and selection step.
If \code{0}, \code{shapff} model runs SHAPley values at the end
of final model and keeps permutation VIMs usage at other steps.
\code{1} is default.}

\item{shap_type}{Final SHAP calculation method. If \code{shapley}, \link[fastshap]{fastshap}
will be ran. If \code{tree}, \link[treeshap]{treeshap} will be ran.
Running treeshap will have longer runtime, but allows for interaction values
and plots to be used.}

\item{module_membership}{A vector that specifies the module membership for each
each feature.}

\item{screen_params}{Defines the parameter settings for the screening step
of \link[fuzzyforest]{fuzzyforest}.
See \code{\link[fuzzyforest]{screen_control}} for
details. \code{screen_params} is an object of type
\code{screen_control}.}

\item{select_params}{Defines the parameter setting for the selection step
of \link[fuzzyforest]{fuzzyforest}.
See \code{\link[fuzzyforest]{select_control}} for details.
\code{select_params} is an object of type
\code{select_control}.}

\item{final_ntree}{The number of trees grown in the final random forest in
the selection step. This random forest contains all
the surviving features.}

\item{num_processors}{Number of processors used to fit random forests.}

\item{parallel}{Type of parellization to be used. \code{1} if
\code{\link[doParallel]{doParallel}}. \code{2} if
\code{\link[doSNOW]{doSNOW}}. \code{1} is the default.}

\item{nodesize}{Minimum terminal nodesize. 1 if classification.
5 if regression.  If the sample size is very large,
the trees will be grown extremely deep.
This may lead to issues with memory usage and may
lead to significant increases in the time it takes
the algorithm to run. In this case,
it may be useful to increase \code{nodesize}.}

\item{test_features}{A data.frame containing features from a test set.
The data.frame should contain the features in both
X and Z.}

\item{test_y}{The responses for the test set.}

\item{nsim}{Number of Monte Carlo repetitions for estimating SHAP
values in the screening step. Default is \code{1}. Increasing
\code{nsim} leads to more accurate results, but at the cost
of computational cost.}

\item{final_nsim}{Number of Monte Carlo repetitions for estimating SHAP
values in the selection step. Default is \code{1}. \codt{final_nsim}
should be as large as feasibly possible.}
}
\value{
Returns an object of type fuzzy_forest, which is a list containing the essential
output of fuzzy forests, including a data.frame of selected features and the random forest
model fitted using those features.
}
\description{
Fits fuzzy forest algorithm with SHAP values for feature importance.
}
